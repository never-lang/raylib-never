/**********************************************************************************************
*   LICENSE: zlib/libpng
*
*   raylib is licensed under an unmodified zlib/libpng license, which is an OSI-certified,
*   BSD-like license that allows static linking with closed source software:
*
*   Copyright (c) 2013-2020 Ramon Santamaria (@raysan5)
*   Copyright (c) 2020 Slawomir Maludzinski (binding to Never language)
*
*   This software is provided "as-is", without any express or implied warranty. In no event
*   will the authors be held liable for any damages arising from the use of this software.
*
*   Permission is granted to anyone to use this software for any purpose, including commercial
*   applications, and to alter it and redistribute it freely, subject to the following restrictions:
*
*     1. The origin of this software must not be misrepresented; you must not claim that you
*     wrote the original software. If you use this software in a product, an acknowledgment
*     in the product documentation would be appreciated but is not required.
*
*     2. Altered source versions must be plainly marked as such, and must not be misrepresented
*     as being the original software.
*
*     3. This notice may not be removed or altered from any source distribution.
*
**********************************************************************************************/
record Vector2
{
    x : float;
    y : float;
}

record Color
{
    r : char;
    g : char;
    b : char;
    a : char;
}

let MOUSE_LEFT_BUTTON = 0;
let MOUSE_RIGHT_BUTTON = 1;
let MOUSE_MIDDLE_BUTTON = 2;

let DARKBLUE = Color(chr(0), chr(82), chr(172), chr(255));
let DARKGRAY = Color(chr(80), chr(80), chr(80), chr(255));
let LIME = Color(chr(0), chr(158), chr(47), chr(255));
let MAROON = Color(chr(190), chr(33), chr(55), chr(255));
let RAYWHITE = Color(chr(245), chr(245), chr(245), chr(245));

let screenWidth = 800;
let screenHeight = 450;

extern "libraylib.so" func InitWindow(width : int, height : int, title : string) -> void
extern "libraylib.so" func SetTargetFPS(fps : int) -> void
extern "libraylib.so" func WindowShouldClose() -> bool
extern "libraylib.so" func CloseWindow() -> void
extern "libraylib.so" func GetMousePosition() -> Vector2
extern "libraylib.so" func IsMouseButtonPressed(button : int) -> bool
extern "libraylib.so" func BeginDrawing() -> void
extern "libraylib.so" func EndDrawing() -> void
extern "libraylib.so" func ClearBackground(color : Color) -> void
extern "libraylib.so" func DrawCircleV(center : Vector2, radius : float, color : Color) -> void
extern "libraylib.so" func DrawText(text : string, posX : int, posY : int, fontSize : int, color : Color) -> void

func main() -> int
{
    let ballPosition = Vector2( -100.0, -100.0 );
    let ballColor = Color;

    ballColor = DARKBLUE;

    InitWindow(screenWidth, screenHeight, "Never meets raylib");
    SetTargetFPS(60);

    while (!WindowShouldClose())
    {
        ballPosition = GetMousePosition();

        if (IsMouseButtonPressed(MOUSE_LEFT_BUTTON))
        {
            ballColor = MAROON
        }
        else if (IsMouseButtonPressed(MOUSE_MIDDLE_BUTTON))
        {
            ballColor = LIME
        }
        else if (IsMouseButtonPressed(MOUSE_RIGHT_BUTTON))
        {
            ballColor = DARKBLUE
        }
        else
        {
            ballColor
        };

        BeginDrawing();

            ClearBackground(RAYWHITE);
            DrawCircleV(ballPosition, 40.0, ballColor);
            DrawText("move ball with mouse and click mouse button to change color", 10, 10, 20, DARKGRAY);

        EndDrawing()
    };

    CloseWindow();

    0
}
